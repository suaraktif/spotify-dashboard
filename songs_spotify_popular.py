# -*- coding: utf-8 -*-
"""Songs_Spotify_Popular.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1APD5w6nPgiCyc7OJBU-gMkP_6PVyT5VN
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

"""# **Data** **Collection**"""

spotify_songs = pd.read_csv("Popular_Spotify_Songs.csv", encoding="ISO-8859-1")
spotify_songs.head()

spotify_songs.shape

"""# **Exploring Data**"""

spotify_songs.describe()

spotify_songs.info()

"""# **Cleaning Data**"""

import missingno as msno
msno.matrix(spotify_songs)

spotify_songs.drop(['in_apple_playlists', 'in_apple_charts', 'in_deezer_playlists', 'in_deezer_charts', 'in_shazam_charts'], axis=1, inplace=True)
spotify_songs.head()

spotify_songs.isnull().sum()

spotify_songs['key'].unique()

def clean_numeric_data(x):
    try:
        return int(x)
    except ValueError:
        return 0

spotify_songs['streams'] = spotify_songs['streams'].apply(lambda x: clean_numeric_data(x))

spotify_songs['key'] = spotify_songs['key'].fillna('Unknown')
spotify_songs.isnull().sum()

spotify_songs.info()

"""# **Exploring Data 2**"""

spotify_songs.describe()

spotify_songs.info()

"""# **DATA VISUALISATION**"""

def create_bar_plot(figsize_x, figsize_y, x_value, y_value, data_value, labels_value, plt_title, plt_xlabel, plt_ylabel):
    plt.figure(figsize=(figsize_x, figsize_y))
    songs_plt = sns.barplot(x=x_value, y=y_value, data=data_value)
    songs_plt.bar_label(songs_plt.containers[0], labels=labels_value, rotation=0)
    plt.title(plt_title)
    plt.xlabel(plt_xlabel)
    plt.ylabel(plt_ylabel)
    plt.xticks(rotation=90)
    plt.show()

"""# Data lagu yang paling banyak diputar setiap tahunnya dalam sepuluh tahun terakhir"""

streamed_df = spotify_songs.sort_values(by=['released_year', 'streams'], ascending=False).drop_duplicates('released_year').reset_index(drop=True)
streamed_df = streamed_df.sort_values(by=['released_year'], ascending=False).reset_index(drop=True)
streamed_df.head()

create_bar_plot(figsize_x=12, figsize_y=12, x_value="streams", y_value="track_name", data_value=streamed_df.head(10), labels_value=streamed_df["released_year"].head(10), plt_title="Lagu yang paling banyak diputar selama sepuluh tahun terakhir", plt_xlabel="Streams", plt_ylabel="Track Name")

"""# Lima lagu teratas yang paling sering diputar sepanjang masa"""

top_5_streamed_df = spotify_songs.sort_values(by=['streams'], ascending=False).reset_index()
top_5_streamed_df.head()

create_bar_plot(figsize_x=9, figsize_y=9, x_value="streams", y_value="track_name", data_value=top_5_streamed_df.head(5), labels_value=top_5_streamed_df["artist(s)_name"].head(5), plt_title="Lima lagu teratas di Spotify sepanjang masa", plt_xlabel="Streams", plt_ylabel="Track Name")

"""# Lagu dengan jumlah paling sering ditambahkan ke dalam playlist Spotify setiap tahun dalam 10 tahun terakhir"""

spotify_playlists_df = spotify_songs.sort_values(by=['released_year'], ascending=False).drop_duplicates('released_year').reset_index(drop=True)
streamed_df = streamed_df.sort_values(by=['in_spotify_playlists'], ascending=False).reset_index(drop=True)
spotify_playlists_df.head()

create_bar_plot(figsize_x=10, figsize_y=10, x_value="in_spotify_playlists", y_value="track_name", data_value=spotify_playlists_df.head(10), labels_value=spotify_playlists_df["released_year"].head(10), plt_title="Lagu yang paling sering ditambahkan ke playlist Spotify selama sepuluh tahun terakhir", plt_xlabel="Spotify Playlists", plt_ylabel="Track Name")

"""# Lagu dengan jumlah paling sering masuk dalam tangga lagu Spotify sepanjang masa"""

spotify_charts_df = spotify_songs.sort_values(by=['in_spotify_charts'], ascending=False).reset_index()
spotify_charts_df.head()

create_bar_plot(figsize_x=9, figsize_y=9, x_value="in_spotify_charts", y_value="track_name", data_value=spotify_charts_df.head(5), labels_value=spotify_charts_df["artist(s)_name"].head(5), plt_title="Lagu yang paling sering masuk dalam tangga lagu Spotify sepanjang masa", plt_xlabel="Spotify Charts", plt_ylabel="Track Name")

"""# Kunci nada yang paling banyak digunakan dalam lagu"""

spotify_songs.info()

keys_used = spotify_songs.groupby('key').agg(({'track_name': list, 'artist(s)_name': list})).reset_index()
keys_used['key_frequency'] = keys_used['track_name'].apply(lambda x: len(x))
keys_used = keys_used.sort_values(by=['key_frequency'], ascending=False)
mask = keys_used['key'] == 'Unknown'
keys_used = keys_used[~mask]
keys_used.head()

create_pie_chart(figsize_x=12, figsize_y=10, data_values=keys_used["key_frequency"].head(5), labels_values=keys_used["key"].head(5), plt_title="Kunci nada yang paling banyak digunakan dalam lagu")



"""# Artis dengan jumlah pemutaran terbanyak di Spotify sepanjang masa





"""

artist_streams = spotify_songs.groupby('artist(s)_name').agg({'streams': 'sum'}).reset_index()
top_5_artist_df = artist_streams.sort_values(by=['streams'], ascending=False).reset_index()
top_5_artist_df.head()

create_bar_plot(figsize_x=12, figsize_y=8, x_value="streams", y_value="artist(s)_name", data_value=top_5_artist_df.head(5), labels_value=top_5_artist_df["streams"].head(5), plt_title="Artis dengan jumlah pemutaran terbanyak di Spotify sepanjang masa", plt_xlabel="Streams", plt_ylabel="Artist Name")

import subprocess
import streamlit as st

# Mendapatkan versi Python menggunakan subprocess
try:
    python_version = subprocess.check_output(["python", "--version"]).decode("utf-8")
    st.write(f"Versi Python yang digunakan: {python_version}")
except subprocess.CalledProcessError as e:
    st.write(f"Gagal mengambil versi Python: {e}")
